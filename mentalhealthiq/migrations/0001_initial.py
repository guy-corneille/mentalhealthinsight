# Generated by Django 5.2.3 on 2025-06-17 11:17

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentCriteria',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Clinical', 'Clinical'), ('Facility', 'Facility'), ('Administrative', 'Administrative'), ('Ethical', 'Ethical'), ('Quality Improvement', 'Quality Improvement')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('purpose', models.CharField(choices=[('Assessment', 'Patient Assessment'), ('Audit', 'Facility Audit')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Assessment Criteria',
            },
        ),
        migrations.CreateModel(
            name='BenchmarkCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('audit', 'Audit Score'), ('assessment', 'Assessment Completion')], max_length=20)),
                ('weight', models.FloatField(default=1.0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Benchmark Criteria',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('facility_type', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(default='Country', max_length=100)),
                ('coordinates', models.CharField(blank=True, max_length=100, null=True)),
                ('capacity', models.IntegerField(default=0)),
                ('status', models.CharField(default='Active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('last_inspection_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='PendingUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('superuser', 'Superuser'), ('admin', 'Admin'), ('evaluator', 'Evaluator'), ('viewer', 'Viewer')], max_length=20)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('password', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('superuser', 'Superuser'), ('admin', 'Admin'), ('evaluator', 'Evaluator'), ('viewer', 'Viewer')], max_length=20)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audit_date', models.DateTimeField(blank=True, null=True)),
                ('scheduled_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('overall_score', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('missed', 'Missed')], default='scheduled', max_length=20)),
                ('missed_reason', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_audits', to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audits', to='mentalhealthiq.facility')),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='AuditCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_name', models.CharField(max_length=255)),
                ('score', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('audit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria_scores', to='mentalhealthiq.audit')),
            ],
        ),
        migrations.CreateModel(
            name='BenchmarkComparison',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comparison_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('overall_score_a', models.FloatField()),
                ('overall_score_b', models.FloatField()),
                ('detailed_results', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('facility_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparisons_as_a', to='mentalhealthiq.facility')),
                ('facility_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparisons_as_b', to='mentalhealthiq.facility')),
            ],
            options={
                'ordering': ['-comparison_date'],
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assessment_date', models.DateTimeField(blank=True, null=True)),
                ('scheduled_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('score', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('missed', 'Missed')], default='scheduled', max_length=20)),
                ('missed_reason', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_assessments', to=settings.AUTH_USER_MODEL)),
                ('criteria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mentalhealthiq.assessmentcriteria')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mentalhealthiq.facility')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('done', 'Done')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_feedback', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='mentalhealthiq.feedback')),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='mentalhealthiq.assessmentcriteria')),
            ],
        ),
        migrations.CreateModel(
            name='IndicatorScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_scores', to='mentalhealthiq.assessment')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mentalhealthiq.indicator')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('address', models.TextField()),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Discharged', 'Discharged'), ('Referred', 'Referred'), ('Inactive', 'Inactive')], default='Active', max_length=20)),
                ('registration_date', models.DateField()),
                ('emergency_contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to='mentalhealthiq.facility')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='mentalhealthiq.patient'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('report_type', models.CharField(choices=[('assessment', 'Assessment Report'), ('audit', 'Audit Report'), ('facility', 'Facility Performance Report'), ('patient', 'Patient Outcomes Report'), ('staff', 'Staff Efficiency Report')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('generated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('join_date', models.DateField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('On Leave', 'On Leave'), ('Former', 'Former')], default='Active', max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='mentalhealthiq.facility')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='primary_staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_patients', to='mentalhealthiq.staffmember'),
        ),
        migrations.CreateModel(
            name='StaffQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=255)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to='mentalhealthiq.staffmember')),
            ],
        ),
        migrations.CreateModel(
            name='FacilityRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('overall_rank', models.IntegerField()),
                ('total_facilities', models.IntegerField()),
                ('audit_score', models.FloatField()),
                ('previous_rank', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='mentalhealthiq.facility')),
            ],
            options={
                'ordering': ['overall_rank', '-ranking_date'],
                'unique_together': {('facility', 'ranking_date')},
            },
        ),
        migrations.CreateModel(
            name='MetricSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('patient_load', 'Patient Load'), ('assessment_completion', 'Assessment Completion')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('active_patients', models.IntegerField()),
                ('discharged_patients', models.IntegerField()),
                ('inactive_patients', models.IntegerField()),
                ('capacity_utilization', models.FloatField()),
                ('scheduled_assessments', models.IntegerField()),
                ('completed_assessments', models.IntegerField()),
                ('completion_rate', models.FloatField()),
                ('ninety_day_total_assessments', models.IntegerField(default=0)),
                ('ninety_day_completed_assessments', models.IntegerField(default=0)),
                ('ninety_day_completion_rate', models.FloatField(default=0.0)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='mentalhealthiq.facility')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['facility', 'metric_type', 'timestamp'], name='mentalhealt_facilit_5c4859_idx')],
            },
        ),
    ]
